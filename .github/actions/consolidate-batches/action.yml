name: Consolidate Batches
description: Simple consolidation of batch review results.

inputs:
  gemini_api_key:
    description: 'Gemini API key for generating summaries'
    required: true

runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Gemini CLI
      shell: bash
      run: |
        set -euo pipefail
        for i in 1 2 3; do
          if npm install -g @google/gemini-cli; then exit 0; fi
          echo "npm install failed, retrying ($((3-i)) left)"; sleep 5
        done
        exit 1

    - shell: bash
      env:
        GEMINI_API_KEY: ${{ inputs.gemini_api_key }}
      run: |
        set -euo pipefail
        
        echo "Starting simple batch consolidation..."
        
        # Get PR number for context
        PR_NUM="${{ github.event.pull_request.number || '' }}"
        
        # Create detailed review by combining all batch results
        echo "# AI Code Review - Detailed Report ${PR_NUM:+for PR #$PR_NUM}" > consolidate_review.md
        echo "" >> consolidate_review.md
        echo "*Generated on $(date -u '+%Y-%m-%d %H:%M:%S UTC')*" >> consolidate_review.md
        echo "" >> consolidate_review.md
        
        # Check if we have batch artifacts
        if [ -d "review-batch-*" ]; then
          echo "Found batch results, consolidating individual reviews..."
          
          echo "## 📊 Review Summary" >> consolidate_review.md
          echo "" >> consolidate_review.md
          
          # Count total files reviewed
          TOTAL_FILES=0
          BATCH_COUNT=0
          
          # Process each batch artifact
          for batch_dir in review-batch-*; do
            if [ -d "$batch_dir" ]; then
              BATCH_COUNT=$((BATCH_COUNT + 1))
              echo "Processing batch: $batch_dir"
              
                             # Count files in this batch
               if [ -d "$batch_dir/reviews" ]; then
                 BATCH_FILES=$(find "$batch_dir/reviews" -name "*.md" -type f | grep -v summary.json | wc -l)
                 TOTAL_FILES=$((TOTAL_FILES + BATCH_FILES))
                 echo "- **Batch $BATCH_COUNT:** $BATCH_FILES files reviewed" >> consolidate_review.md
               fi
            fi
          done
          
          echo "" >> consolidate_review.md
          echo "### Overall Statistics" >> consolidate_review.md
          echo "- **Total batches:** $BATCH_COUNT" >> consolidate_review.md
          echo "- **Total files reviewed:** $TOTAL_FILES" >> consolidate_review.md
          echo "" >> consolidate_review.md
          
          # Combine all individual file reviews
          echo "## 📝 File Reviews" >> consolidate_review.md
          echo "" >> consolidate_review.md
          
                     # Process each batch directory and accumulate all reviews
           for batch_dir in review-batch-*; do
             if [ -d "$batch_dir" ] && [ -d "$batch_dir/reviews" ]; then
               echo "### Batch $batch_dir" >> consolidate_review.md
               echo "" >> consolidate_review.md
               
               # Process each review file in the batch and add to detailed review
               for review_file in $(find "$batch_dir/reviews" -name "*.md" -type f | grep -v summary.json | sort); do
                 if [ -f "$review_file" ]; then
                   echo "Processing: $review_file"
                   
                   # Extract filename and create a clear heading
                   filename=$(basename "$review_file" .md)
                   original_path=$(echo "$filename" | sed 's/_/\//g' | sed 's/^\.\///')
                   
                   # Add file heading before the review content
                   echo "### 📄 $original_path" >> consolidate_review.md
                   echo "" >> consolidate_review.md
                   
                   # Add the review content
                   cat "$review_file" >> consolidate_review.md
                   echo "" >> consolidate_review.md
                   echo "---" >> consolidate_review.md
                   echo "" >> consolidate_review.md
                 fi
               done
             fi
           done
          
          # Create AI-generated summary using Gemini CLI
          echo "Generating AI summary of the detailed review..."
          
          # Create summary prompt
          SUMMARY_PROMPT="You are a technical writer tasked with creating a concise summary of a code review.

## TASK
Summarize the following code review in under 500 words. Focus on the most important findings and actionable recommendations.

## REQUIREMENTS
- Keep it under 500 words
- Focus on critical issues and high-priority recommendations
- Use clear, professional language
- Structure with key findings first, then recommendations
- Include file names where relevant
- Be actionable and specific

## FORMAT
- Start with a brief overview
- List key findings by category (Security, Performance, Code Quality, etc.)
- Provide top 3-5 actionable recommendations
- End with overall assessment

## CODE REVIEW TO SUMMARIZE:
$(cat consolidate_review.md)

## SUMMARY (under 500 words):"

          # Create summary using Gemini CLI
          SUMMARY_CONTENT=$(echo "$SUMMARY_PROMPT" | gemini --model gemini-2.5-pro --prompt - 2>/dev/null || echo "Summary generation failed")
          
          # Create AI-generated summary file
          echo "# AI Code Review - Summary ${PR_NUM:+for PR #$PR_NUM}" > consolidate_summary.md
          echo "" >> consolidate_summary.md
          echo "*Generated on $(date -u '+%Y-%m-%d %H:%M:%S UTC')*" >> consolidate_summary.md
          echo "" >> consolidate_summary.md
          
          echo "## 📊 Review Statistics" >> consolidate_summary.md
          echo "" >> consolidate_summary.md
          echo "- **Total batches:** $BATCH_COUNT" >> consolidate_summary.md
          echo "- **Total files reviewed:** $TOTAL_FILES" >> consolidate_summary.md
          echo "" >> consolidate_summary.md
          
          echo "## 🎯 Executive Summary" >> consolidate_summary.md
          echo "" >> consolidate_summary.md
          echo "$SUMMARY_CONTENT" >> consolidate_summary.md
          echo "" >> consolidate_summary.md
          
          echo "---" >> consolidate_summary.md
          echo "*For detailed review comments and specific recommendations, see the full detailed review.*" >> consolidate_summary.md
          
        else
          echo "No batch results found." >> consolidate_review.md
          echo "No batch results found." >> consolidate_summary.md
        fi
        
        echo "🎉 Batch consolidation complete!"
        echo "📁 Detailed review: consolidate_review.md"
        echo "📋 Summary: consolidate_summary.md"
